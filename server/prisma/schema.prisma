generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file: ./dev.db"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ownedBoards    Board[] @relation("BoardOwner")
  memberOfBoards Board[] @relation("BoardMembers")
  assignedTasks  Task[]  @relation("TaskAssignes")
}

model Board {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  owner   User     @relation("BoardOwner", fields: [ownerId], references: [id])
  ownerId String
  members User[]   @relation("BoardMembers")
  columns Column[] @relation("BoardColumns")
  tasks   Task[]   @relation("BoardTasks")
}

model Column {
  id        String   @id @default(cuid())
  title     String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  board   Board  @relation("BoardColumns", fields: [boardId], references: [id], onDelete: Cascade)
  boardId String
  tasks   Task[] @relation("ColumnTasks")
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  archived    Boolean  @default(false)

  // Relations 
  User       User?     @relation("TaskAssignes", fields: [userId], references: [id])
  userId     String?
  Board      Board     @relation("BoardTasks", fields: [boardId], references: [id], onDelete: Cascade)
  boardId    String
  Column     Column    @relation("ColumnTasks", fields: [columnId], references: [id], onDelete: Cascade)
  columnId   String
  Priority   Priority? @relation(fields: [priorityId], references: [id])
  priorityId String?
  Label      Label[]   @relation("TaskLabels")
}

model Priority {
  id        String   @id @default(cuid())
  name      String   @unique
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  Task Task[]
}

model Label {
  id        String   @id @default(cuid())
  name      String   @unique
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  Task Task[] @relation("TaskLabels")
}
