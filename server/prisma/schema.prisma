generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ownedBoards    Board[] @relation("BoardOwner")
  memberOfBoards Board[] @relation("BoardMembers")
  assignedTasks  Task[]  @relation("TaskAssignes")
  Task           Task[]
}

model Board {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  owner   User     @relation("BoardOwner", fields: [ownerId], references: [id])
  ownerId String
  members User[]   @relation("BoardMembers")
  columns Column[]
  tasks   Task[]
}

model Column {
  id        String   @id @default(cuid())
  title     String
  order     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  board   Board  @relation(fields: [boardId], references: [id])
  boardId String
  tasks   Task[]
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  order       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations - todo
  User       User?     @relation("TaskAssignes", fields: [userId], references: [id])
  userId     String?
  Board      Board?    @relation(fields: [boardId], references: [id])
  boardId    String?
  Column     Column?   @relation(fields: [columnId], references: [id])
  columnId   String?
  Priority   Priority? @relation(fields: [priorityId], references: [id])
  priorityId String?
  Labels     Label[]   @relation(fields: [labelId], references: [id])
  labelId    String?
  User       User?     @relation(fields: [userId], references: [id])
}

model Priority {
  id        String   @id @default(cuid())
  name      String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Task      Task[]
}

model Label {
  id        String   @id @default(cuid())
  name      String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}
